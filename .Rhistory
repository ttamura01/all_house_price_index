library(tidyverse)
library(ggtext)
library(patchwork)
library(glue)
library(ggtext)
setwd("/Users/takayukitamura/Documents/R_Computing/house_prices")
# upload house_px file
house_index <- read.csv("/Users/takayukitamura/Documents/R_Computing/house_prices/house_px_2023_10.csv", sep = ",",
header = TRUE, stringsAsFactors = FALSE ) %>%
rename(date = DATE,
"US_Avg" = US,
"SanJose" = San.Jose,
"NY.NJ" = NY.NJ,
"Columbus" = Columbus.OH) %>%
select(-X)
tail(house_index)
updates <- tribble(~date, ~US_Avg, ~Chicago, ~Pittsburgh, ~Boston, ~SanJose, ~SanFransisco,
~NY.NJ, ~Austin, ~Philadelphia, ~Columbus,
"2024-01-01", 664.58, 544.44, 505.68, 1315.89, 1289.43, 1181.01,
1069.37, 895.90, 837.88, 598.67)
house_index <- rbind(house_index, updates)
# Convert 'date' column to Date format if it's not already
house_index$date <- as.Date(house_index$date)
sapply(house_index, class)
head(house_index)
tail(house_index)
house_index[ 196, ]
# Reshape the data frame from wide to long format
house_index_long <- pivot_longer(house_index, cols = -date, names_to = "city", values_to = "price")
# Get the latest price for each city
latest_prices <- aggregate(price ~ city, data = house_index_long[house_index_long$date == as.Date("2023-10-01"), ], max)
# Reorder the levels of 'city' based on the latest price
house_index_long$city <- factor(house_index_long$city, levels = latest_prices[order(latest_prices$price, decreasing = TRUE), "city"])
ggplot(data = house_index_long, aes(x = date, y = price, color = city)) +
geom_line() +
labs(title = "Historical House Prices Index in US major cities",
subtitle = "(house price of 1980-01-01 = 100)",
caption = "Source = FRED(Federal Reserve Bank of St.Louis)",
x = NULL,
y = "House Price Index") +
theme(
legend.title = element_blank(),
legend.key = element_blank(),
plot.caption = element_markdown(color = "grey", size = 7)
) +
theme_minimal()
